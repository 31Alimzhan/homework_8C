// Задача 54: Задайте двумерный массив. Напишите программу, которая упорядочит по убыванию элементы каждой строки двумерного массива.
/*
// ----------------------------------------- Модуль Методов--------------------------------
int [,] Generate_array()                                            // генерация рандомного массива
{
    int[,] arr = new int[5,5];                                      // инициалазация массива 
    for (int i = 0; i<5; i++)                                       // строки
    {
        for (int j=0; j<5; j++)                                     // столбцы
        {
            arr[i,j] = new Random().Next(0,10);                     // присваивание элементу массива рандомного числа
            Console.Write(arr[i,j]+" ");                            // печатаем его  
        }
        Console.WriteLine();                                        // пустая строка для удобства
    }


    return arr;
}
void Selection(int[] array)                                         // переборка каждой строки двумерного масиива по убыванию 
{
    for (int i=0; i<5; i++)                                         // запускаем цикл итераций
    {
        int max = i;                                                // обозначаем и присваиваем переменной max
        for (int j=i+1; j<5; j++)                                   // переборка внутри массива 
        {
            if (array[j]>array[max]) max = j;                       // если j элемент больше max то присваиваем переменной max значение КООРДИНАТЫ!!!! с максимальным элементом 

        }
    
    int temp = array [i];                                           // для свапа присваиваем временное значение
    array[i] = array[max];                                          // итому элементу присваиваем значение максимального элемента с необходимым индексом
    array[max] = temp;                                              // 
    Console.Write(array[i]+" ");                                    // печатаем
    }
    Console.WriteLine();

}
void Permutation(int [,] array)                                     // метод для выделения одномерных массивов из двумерного.
{
    int[] arr = new int[5];                                         // инициализация одномерного массива
    for (int i=0; i<5; i++)                                         // по сутии выбираем каждую строку 
    {
        for (int j=0; j<5; j++)
        {
            arr[j] = array[i,j];                                    // и отправляем ее в массив
 
        }
    Selection(arr);                                                 // вызываем сепарацию с печатью
    }
}
// ----------------------------------------- Основная программа----------------------------
Console.WriteLine("Сгенерирован рандомный массив");
int [,] array = Generate_array();
Console.WriteLine("После перестановки по убыванию ");
Permutation(array);
*/



// Задача 56: Задайте прямоугольный двумерный массив. Напишите программу, которая будет находить строку с наименьшей суммой элементов.
/*
int [,] Generate_array()                                            // генерация рандомного массива
{
    int[,] arr = new int[5,5];                                      // инициалазация массива 
    for (int i = 0; i<5; i++)                                       // строки
    {
        for (int j=0; j<5; j++)                                     // столбцы
        {
            arr[i,j] = new Random().Next(0,10);                     // присваивание элементу массива рандомного числа
            Console.Write(arr[i,j]+" ");                            // печатаем его  
        }
        Console.WriteLine();                                        // пустая строка для удобства
    }


    return arr;
}

void Separation(int [,] array)                                     // метод для выделения одномерных массивов из двумерного.
{
    int min = 0;                                                   // обозначаем переменную для поиска минималоьной суммы
    int index_stroki = 0;                                          // обозначаем переменную для указания номера строки в результате
    int [] sum = new int[5];                                       // инициируем массив для значений сумм строк
    for (int i=0; i<5; i++)                                        // запускаем цикл строк 
    {
        for (int j=0; j<5; j++)                                    // запускаем цикл для суммирования 
        {
          sum[i] = sum[i] + array[i,j];                            // суммируем
        }
//        Console.WriteLine(sum[i]);
        min = sum[i];                                              // присваиваем переменной значение последней суммы в цикле "i"    
    }
    for (int k=0; k<5; k++)                                        // цикл итерации по элементам массива сумм
    {
        if (min>sum[k]) min = sum[k]; index_stroki = k;            // находим минималоьное значение а также индекс строки с минмиальным значением
    }
    Console.WriteLine($"Строка с наименьшей суммой элементов - {index_stroki} - сумма элементов {min}");  // выводим все на экран.
}
// ----------------------------------------- Основная программа----------------------------
Console.WriteLine("Сгенерирован рандомный массив");
int [,] array = Generate_array();
Separation(array);
*/



// Задача 58: Задайте две матрицы. Напишите программу, которая будет находить произведение двух матриц.
/*
void Matrix_set()                                                                          // задаем метод
{
    int[,] matrix1 = new int[2,2];                                                         // здесь задаем три массива для содержимого матриц
    int[,] matrix2 = new int[2,2];
    int[,] matrix3 = new int[2,2];
    
    //--------------------------------------------заполняем первую матрицу------------------
    Console.WriteLine("Первая матрица");
    for (int i=0; i<2; i++)
    {
        for (int j=0; j<2; j++)
        {
            matrix1[i,j] = new Random().Next(1,10);                                        // рандомными значениями
            Console.Write(matrix1[i,j]+" ");
        }
        Console.WriteLine();
    }
    Console.WriteLine();
    //--------------------------------------------заполняем вторую матрицу------------------
    Console.WriteLine("Вторая матрица");
        for (int i=0; i<2; i++)
    {
        for (int j=0; j<2; j++)
        {
            matrix2[i,j] = new Random().Next(1,10);                                        // рандомными значениями
            Console.Write(matrix2[i,j] + " ");
        }
        Console.WriteLine();
    }
            Console.WriteLine();
    Console.WriteLine("Результирующая матрица равна");                                     // вычисляем результат

    matrix3[0,0] = ((matrix1[0,0]*matrix2[0,0]) + (matrix1[0,1]*matrix1[1,0]));            // вычисляем первый элемент матрицы 0,0
    Console.Write(matrix3[0,0] + " ");
    matrix3[0,1] = ((matrix1[0,0]*matrix2[0,1]) + (matrix1[0,1]*matrix1[1,1]));            // вычисляем второй элемент матрицы 0,1
    Console.Write(matrix3[0,1] + " ");
    Console.WriteLine();
    matrix3[1,0] = ((matrix1[1,0]*matrix2[0,0]) + (matrix1[1,1]*matrix1[1,0]));            // вычисляем третий элемент матрицы 1,0
    Console.Write(matrix3[1,0] + " ");
    matrix3[1,1] = ((matrix1[1,0]*matrix2[0,1]) + (matrix1[1,1]*matrix1[1,1]));            // вычисляем четвертый элемент матрицы 1,1
    Console.Write(matrix3[1,1] + " ");

 
}
Matrix_set();                                                                             // вызываем метод
*/

// Задача 60. ...Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. Напишите программу, которая будет построчно выводить массив, добавляя индексы каждого элемента.
/*
void Array3D (int[] arr)                                                 // метод создания 3D массива и его заполнения
{
    int [,,] array = new int [3,3,3];                                    // задаем массив почему такие маленькие размерности потому что если например сделать 2 то нехватит двузначных чисел так как их надо будет 125
    int count = 0;
    for (int i=0; i<3; i++)                                              // цикл 1
    { 
        for (int j=0; j<3; j++)                                          // цикл 2
        {
            for (int k=0; k<3; k++)                                      // цикл 3
            {
                array [i,j,k] = arr[count];                              // заполнение массива
                Console.Write($"{array[i,j,k]} + ( {i}, {j}, {k}) ");    // вывод на экран
                count++;
            }
        Console.WriteLine();                                             // разделительная пустая строка

        }
    }

    

}
int [] ArrayRandom()                                                     // метод создания массива с неповторяющимися значениями
{
    int[] array = new int[27];                                           // инициипуем массив
    int non_repeat = 0;                                                  // определяем переменную
    for (int i=0; i<27; i++)                                             // запускаем цикл по количеству элементов массива (одна лишьняя :-))
    {
        non_repeat = new Random().Next(10,100);                          // генерируем число 
        for (int j =0; j<i; j++)                                         // затем цикл который проверяет значения от нуля до числа сгенерированных чисел
        {
            if (array[j] == non_repeat)                                  // проверяем на соответсвие если есть совпадение 
            {non_repeat = new Random().Next(10,100); j=0;}               // то генерируем число заново при это (Важно !!!) обнуляем итерационную переменную "j" для проверки на соответствие заново
        }
        array [i] = non_repeat;                                          // после проверки присваиваем значение (формируем массив)
    }
return array;                                                            // отправляем массив с неповторяющимися числами.
}

int [] array = ArrayRandom(); 
Array3D(array);
*/
// Задача 62. Напишите программу, которая заполнит спирально массив 4 на 4.

void Print_spiral(int[,] array, int n)                             // метод принимает 2 аргумента массив и размер стороны спирали
{
    for (int i = 0; i < 4; i++)                                    // запускаем цикл с иттерацией 
    {
        for (int j = 0; j < 4; j++)                                // вложенный цикл 
        {
            Console.Write(array[i, j] + " - ");                    // печатаем значение элемента массива
        }
    Console.WriteLine();                                           // пустая строка для удобства
    }
}

int[,] Get_massive(int n)                                          // метод формирования массива с нужными координатами по элементам
{
            int[,] arr = new int[4, 4];                                  // обозначаем массив
            int i = 0, j = 0, k =0;                                   
            int value = 1;                                               // обозначаем начальное число 

            for (j=0; j<3; j++) { arr[i,j] = value; value++; }           // запускаем серию циклов
            for (i=0; i<4; i++) { arr[i,j] = value; value++; }
            i=3;j=2;
            for (k=0; k<3; k++,j--) {arr[i,j] = value; value++;}
            i=2;j=0;
            for (k=0; k<2; k++,i--) {arr[i,j] = value; value++;}
            i=1;j=1;
            for (k=0; k<2; k++,j++) {arr[i,j] = value; value++;}            
            i=2;j=2;
            for (k=0; k<2; k++,j--) {arr[i,j] = value; value++;}
return arr;
}

Console.WriteLine("размер квадратной спирали - 4");
int n = 4; // Convert.ToInt32(Console.ReadLine());
int[,] array = Get_massive(n);                                          // вызов метода по заполнению массива с правильными коордлинатами
Print_spiral(array,n);                                                  // вызов метода прорисовки спирали
Console.WriteLine(); 
        
    

